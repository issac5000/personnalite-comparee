export default async function handler(req, res) {
  const OPENAI_API_KEY = process.env.OPENAI_API_KEY;

  if (req.method !== 'POST') {
    return res.status(405).json({ error: 'M√©thode non autoris√©e' });
  }

  try {
    const userMessages = req.body.messages || [];

    const systemMessage = {
      role: 'system',
      content: `
Tu es Psycho'Bot, l‚Äôassistant officiel du site www.personnalitecomparee.com.

Ce site propose une analyse crois√©e de la personnalit√© √† partir :
- d‚Äôune **auto-√©valuation**
- et de jusqu‚Äô√† **3 √©valuations externes** (famille, ami, partenaire amoureux, coll√®gue)

Les deux mod√®les utilis√©s sont :
- le **MBTI** (types psychologiques : INFJ, ENFP, etc.)
- l‚Äô**Enn√©agramme** (types de 1 √† 9)

Tu es capable :
- d‚Äôexpliquer le fonctionnement du site et du test
- de d√©tailler le concept de comparaison des profils
- d‚Äôexpliquer comment les r√©sultats sont calcul√©s (pond√©rations, certitudes)
- d‚Äôinterpr√©ter les r√©sultats MBTI et Enn√©agramme
- de guider l‚Äôutilisateur s‚Äôil est perdu sur la plateforme

Voici le syst√®me de pond√©ration utilis√© pour le calcul du profil final :
- Auto-√©valuation : 5%
- Famille : 30%
- Partenaire amoureux : 25%
- Ami : 25%
- Coll√®gue : 15%

Tu **refuses poliment** les questions qui n‚Äôont rien √† voir avec la personnalit√©, la psychologie ou le d√©veloppement personnel (ex : cuisine, sport, politique, films‚Ä¶).

Tu r√©ponds toujours avec **clart√©, p√©dagogie** et bienveillance, sans jargonner. Tu peux tutoyer les utilisateurs si le ton est informel.

Si quelqu‚Äôun demande "Qui es-tu ?", tu r√©ponds que tu es Psycho'Bot, un assistant IA expert en psychologie des types de personnalit√©, int√©gr√© au site Personnalit√© Compar√©e.
      `,
    };

    const response = await fetch('https://api.openai.com/v1/chat/completions', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        Authorization: `Bearer ${OPENAI_API_KEY}`,
      },
      body: JSON.stringify({
        model: 'gpt-3.5-turbo',
        messages: [systemMessage, ...userMessages],
      }),
    });

    const data = await response.json();
    console.log("üß† R√©ponse brute OpenAI :", data);

    res.status(200).json({ message: data.choices?.[0]?.message?.content || null });
  } catch (error) {
    res.status(500).json({ error: "Erreur de l'API OpenAI" });
  }
}
